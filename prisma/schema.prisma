generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique
  password   String
  role       String
  status     String
  orders     orders[]
  receptions receptions[]
  sales      sales[]
}

model products {
  id               Int                @id @default(autoincrement())
  name             String
  description      String?
  stock            Int
  sale_price       Int
  purchase_price   Int
  threshold        Int
  prescription_req Boolean
  batches          batches[]
  inventories      inventories[]
  orderDetails     orderDetails[]
  receptionDetails receptionDetails[]
  saleDetails      saleDetails[]
  stockMovements   stockMovements[]
}

model sales {
  id            Int           @id @default(autoincrement())
  sale_date     DateTime
  userId        Int
  details       saleDetails[]
  user          users         @relation(fields: [userId], references: [id])
}

model saleDetails {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Int
  saleId    Int
  productId Int
  product   products @relation(fields: [productId], references: [id])
  sale      sales    @relation(fields: [saleId], references: [id])
}

model customers {
  id        Int      @id @default(autoincrement())
  address   String
  firstName String
  lastName  String
  phone     String
  orders    orders[]
}

model orders {
  id         Int            @id @default(autoincrement())
  order_date DateTime
  clientId   Int
  userId     Int?
  details    orderDetails[]
  client     customers        @relation(fields: [clientId], references: [id])
  user       users?          @relation(fields: [userId], references: [id])
}

model orderDetails {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Decimal
  productId Int
  orderId   Int
  order     orders   @relation(fields: [orderId], references: [id])
  product   products @relation(fields: [productId], references: [id])
}

model receptions {
  id               Int                @id @default(autoincrement())
  reception_date       DateTime
  userId           Int
  details          receptionDetails[]
  user             users              @relation(fields: [userId], references: [id])
}

model receptionDetails {
  id          Int        @id @default(autoincrement())
  quantity    Int
  price Int
  productId   Int
  receptionId Int
  product     products   @relation(fields: [productId], references: [id])
  reception   receptions @relation(fields: [receptionId], references: [id])
}

model suppliers {
  id       Int    @id @default(autoincrement())
  name     String
  address  String
  contact  String
}

model batches {
  id              Int      @id @default(autoincrement())
  batch_number    String
  quantity        Int
  expiration_date DateTime
  productId       Int
  product         products @relation(fields: [productId], references: [id])
}

model inventories {
  id             Int      @id @default(autoincrement())
  inventory_date DateTime
  stock          Int
  productId      Int
  product        products @relation(fields: [productId], references: [id])
}

model stockMovements {
  id            Int      @id @default(autoincrement())
  quantity      Int
  movement_date DateTime
  type          String
  productId     Int
  product       products @relation(fields: [productId], references: [id])
}
